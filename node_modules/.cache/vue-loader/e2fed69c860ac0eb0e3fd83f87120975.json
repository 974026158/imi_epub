{"remainingRequest":"/Users/zhangxinbo/Documents/epub-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangxinbo/Documents/epub-vue/src/views/book.vue?vue&type=style&index=0&id=7cdf95d0&scoped=true&lang=css&","dependencies":[{"path":"/Users/zhangxinbo/Documents/epub-vue/src/views/book.vue","mtime":1592544086713},{"path":"/Users/zhangxinbo/Documents/epub-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangxinbo/Documents/epub-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangxinbo/Documents/epub-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangxinbo/Documents/epub-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangxinbo/Documents/epub-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojcGFnZS1vdmVybGF5ewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiA1cHg7CiAgICB0ZXh0LWFsaWduOmNlbnRlcjsKICAgIGhlaWdodDoxNnB4OwogICAgbGVmdDogMDsKICAgIHJpZ2h0OiAwOwogICAgei1pbmRleDogMTAwMDsKICAgIGZvbnQtc2l6ZToxNHB4Owp9CiNwYWdlLW92ZXJsYXktYmFyewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiA1cHg7CiAgICBoZWlnaHQ6M3B4OwogICAgbGVmdDogMDsKICAgIHJpZ2h0OiAwOwogICAgei1pbmRleDogMTAwMDsKICAgIGJhY2tncm91bmQtY29sb3I6Z3JheTsKfQoKI3BhZ2Utb3ZlcmxheS1wcm9jZXNzewogICAgaGVpZ2h0OjNweDsKICAgIGJhY2tncm91bmQtY29sb3I6Z3JlZW47Cn0KCi5sb2FkaW5nLW92ZXJsYXl7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6NDZweDsKICAgIGJvdHRvbTogMHB4OwogICAgbGVmdDogMDsKICAgIHJpZ2h0OiAwOwogICAgei1pbmRleDogMTAwMDA7CiAgbGluZS1oZWlnaHQ6IDgwdmg7CiAgdGV4dC1hbGlnbjpjZW50ZXI7Cn0KICAudG9vbC1yb3d7CiAgICAgIC8qaGVpZ2h0OiA0MHB4OyovCiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgfQogIC52YW4tcG9wdXA+ZGl2ewogICAgICBwYWRkaW5nOiAxMHB4OwogIH0KICAudmFuLXNsaWRlcnsKICAgICAgbWFyZ2luOiAyMHB4OwogIH0KICAjcmVhZGVyLW92ZXJsYXl7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgdG9wOiAwOwogICAgICBib3R0b206IDA7CiAgICAgIHJpZ2h0OiAwOwogICAgICBsZWZ0OiAwOwogICAgICB6LWluZGV4OiAxMDAwMDsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwKTsKICAgICAgcG9pbnRlci1ldmVudHM6bm9uZTsKICB9CiAgLmJhY2tJbWFnZXsKICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICB3aWR0aDogMzBweDsKICAgICAgaGVpZ2h0OiAzMHB4OwogICAgICBib3JkZXItcmFkaXVzOiAzMHB4OwogICAgICBtYXJnaW4tdG9wOiA1cHg7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNERkRGREY7CiAgfQouYmctdGltZzQgewogICAgYmFja2dyb3VuZDogdXJsKCcvcmVhZGVySW1hZ2VzL2Nzc19zcHJpdGVzLnBuZycpIC0xMHB4IC0xMHB4Owp9Ci5iZy10aW1nMyB7CiAgICBiYWNrZ3JvdW5kOiB1cmwoJy9yZWFkZXJJbWFnZXMvY3NzX3Nwcml0ZXMucG5nJykgLTcwcHggLTEwcHg7Cn0KLmJnLXRpbWcxIHsKICAgIGJhY2tncm91bmQ6IHVybCgnL3JlYWRlckltYWdlcy9jc3Nfc3ByaXRlcy5wbmcnKSAgLTEwcHggLTcwcHg7Cn0KLmJnLXRpbWcgewogICAgYmFja2dyb3VuZDogdXJsKCcvcmVhZGVySW1hZ2VzL2Nzc19zcHJpdGVzLnBuZycpIC03MHB4IC03MHB4Owp9Cg=="},{"version":3,"sources":["book.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"book.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n      <div id=\"reader-overlay\"></div>\n\n      <van-popup\n              v-model=\"showLeftDrawer\"\n              position=\"left\"\n              :style=\"{ width: '80%',height:'100%' }\"\n      >\n          <van-tabs type=\"card\">\n              <van-tab title=\"目录\">\n                  <bookmenu v-bind:menuList=\"toc\" v-bind:currentMenu=\"chapter\" @change=\"changeChapter\"></bookmenu>\n              </van-tab>\n          <!--    <van-tab title=\"书签\">内容 2</van-tab>\n              <van-tab title=\"笔记\">内容 3</van-tab>\n              -->\n          </van-tabs>\n\n      </van-popup>\n\n\n      <van-popup\n              v-model=\"popupShow\"\n              position=\"top\"\n              :style=\"{ height: '30%' }\"\n              class=\"reader-tool\"\n      >\n          <div>\n              <van-row class=\"tool-row\">\n                  <van-col span=\"4\">亮度</van-col>\n                  <van-col span=\"16\">\n                          <van-slider v-model=\"light\" @change=\"onLightChange\" />\n                  </van-col>\n              </van-row>\n              <van-row class=\"tool-row\">\n                  <van-col span=\"4\">字号</van-col>\n                  <van-col span=\"16\">\n                      <van-stepper v-model=\"fontSize\" @change=\"onFontSizeChange\" min=\"10\" max=\"24\" input-width=\"40px\" button-size=\"32px\" step=\"2\" disable-input/>\n                  </van-col>\n              </van-row>\n   \n          </div>\n\n\n\n      </van-popup>\n\n\n      <div v-if=\"loading\" class=\"loading-overlay\">\n        <van-loading color=\"#1989fa\" />\n      </div>\n\n      \n\n      <div style=\"height: 100vh\">\n        <van-nav-bar\n                v-bind:title=\"chapter.label\"\n                left-text=\"\"\n                right-text=\"章节\"\n              \n                @click-right=\"onClickRight\"\n        ></van-nav-bar>\n      <div id=\"viewer\"></div>\n    </div>\n\n     <div id=\"page-overlay\">{{ pageText }}</div> \n    <div id=\"page-overlay-bar\"><div id=\"page-overlay-process\" :style=\"width:{pageProcess}\"></div></div>\n  </div>\n  \n</template>\n<style scoped>\n  #page-overlay{\n      position: absolute;\n      bottom: 5px;\n      text-align:center;\n      height:16px;\n      left: 0;\n      right: 0;\n      z-index: 1000;\n      font-size:14px;\n  }\n  #page-overlay-bar{\n      position: absolute;\n      bottom: 5px;\n      height:3px;\n      left: 0;\n      right: 0;\n      z-index: 1000;\n      background-color:gray;\n  }\n\n  #page-overlay-process{\n      height:3px;\n      background-color:green;\n  }\n  \n  .loading-overlay{\n      position: absolute;\n      top:46px;\n      bottom: 0px;\n      left: 0;\n      right: 0;\n      z-index: 10000;\n    line-height: 80vh;\n    text-align:center;\n  }\n    .tool-row{\n        /*height: 40px;*/\n        text-align: center;\n        line-height: 40px;\n    }\n    .van-popup>div{\n        padding: 10px;\n    }\n    .van-slider{\n        margin: 20px;\n    }\n    #reader-overlay{\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        left: 0;\n        z-index: 10000;\n        background-color: rgba(0,0,0,0);\n        pointer-events:none;\n    }\n    .backImage{\n        display: inline-block;\n        width: 30px;\n        height: 30px;\n        border-radius: 30px;\n        margin-top: 5px;\n        border: 1px solid #DFDFDF;\n    }\n  .bg-timg4 {\n      background: url('/readerImages/css_sprites.png') -10px -10px;\n  }\n  .bg-timg3 {\n      background: url('/readerImages/css_sprites.png') -70px -10px;\n  }\n  .bg-timg1 {\n      background: url('/readerImages/css_sprites.png')  -10px -70px;\n  }\n  .bg-timg {\n      background: url('/readerImages/css_sprites.png') -70px -70px;\n  }\n</style>\n<script>\n    import { Image ,Tab, Tabs,Loading,NavBar ,CellGroup,Cell,Card,RadioGroup,Radio,Popup,Progress, Row, Col,Slider,Stepper    } from 'vant';\n    import  bookmenu from '@/components/bookmenu';\n    import Vue from 'vue';\n    import Epub from 'epubjs';\n\n\n    Vue.use(NavBar ).use(Loading ).use(Card)\n        .use(RadioGroup).use(Radio).use(CellGroup)\n        .use(Cell).use(Tabs).use(Tab).use(Popup ).use(Progress)\n        .use( Row).use( Col ).use(Slider).use(Stepper).use(Image);\n\n    var book,rendition;\n\n    export default {\n        name: 'book',\n        components:{\n            bookmenu:bookmenu\n        },\n        data(){\n            return {\n                publicPath:process.env.BASE_URL,\n                book:null,\n                beginBasePage:2,\n                pageText:\"\",\n                pageProcess:\"0%\",\n                currentPage:1,\n                currentChaperIdx:2,\n                rendition:null,\n                chapter:{},\n                changeType:\"menu\",\n                firstLoad:true,\n                loading:true,\n                popupShow:false,\n                showLeftDrawer:false,\n                light:100,\n                locationLoading:true,\n                fontSize:14,\n                backImage:\"\",\n                toc:[],\n                backImageList:[\n                    {class:\"bg-timg\",backImagesrc:\"readerImages/timg_big.jpg\"},\n                    {class:\"bg-timg1\",backImagesrc:\"readerImages/timg1_big.jpg\"},\n                    {class:\"bg-timg3\",backImagesrc:\"readerImages/timg3_big.jpg\"},\n                    {class:\"bg-timg4\",backImagesrc:\"\"},\n                ],\n                readerStyle:{\n                    light:100,\n                    fontSize:14,\n                    backImage:\"\"\n                }\n            }\n        },\n        watch:{\n            toc:{\n                handler:function (oldVal,newVal) {\n                    console.log(newVal)\n                },\n                deep:true\n            },\n            chapter:function (val) {\n                if(this.changeType==\"menu\")\n                    rendition.display(val.href);\n            },\n            fontSize:function (val) {\n                this.onFontSizeChange(val);\n            },\n            light:function (val) {\n               this.onLightChange(val);\n            },\n            backImage:function (val) {\n               this.onBackImageChange(val);\n            }\n        },\n        methods:{\n            onClickLeft() {\n                window.history.back(-1);\n                // book\n            },\n            onClickRight() {\n                this.showLeftDrawer=true;\n            },\n            onLightChange(val){\n                var overlay = document.getElementById(\"reader-overlay\");\n                overlay.style.backgroundColor=\"rgba(0,0,0,\"+(0.5-val/200)+\")\";\n                this.readerStyle.light=val;\n            },\n            onFontSizeChange(val){\n                var iframeDoc = document.getElementsByTagName(\"iframe\")[0].contentWindow.document;\n                var fontSizeStyle = iframeDoc.getElementById(\"fontSize\");\n                if(!fontSizeStyle){\n                    fontSizeStyle = iframeDoc.createElement('style');\n                    fontSizeStyle.id = \"fontSize\";\n                    fontSizeStyle.type = 'text/css';\n                    fontSizeStyle.innerHTML=\"p,div{ font-size:\"+val+\"px }\";\n                    iframeDoc.getElementsByTagName('HEAD').item(0).appendChild(fontSizeStyle);\n                } else{\n                    fontSizeStyle.innerHTML=\"p,div{ font-size:\"+val+\"px }\";\n                }\n                \n\n                if (this.readerStyle.fontSize!=val){\n                    this.readerStyle.fontSize=val;\n                    // this.locationLoading = true;\n                    // let that = this;\n                    // book.locations.generate(666).then(function(location) { // This promise will take a little while to return (About 20 seconds or so for Moby Dick)\n                    //     that.locationLoading = false;\n                    //     that.pageText = (that.beginBasePage + that.currentPage) + \"/\" + book.locations.total;\n                    // });\n                }\n               \n\n            },\n\n            onBackImageChange(val){\n                var iframeDoc = document.getElementsByTagName(\"iframe\")[0].contentWindow.document;\n                var  bdoy = iframeDoc.getElementsByTagName(\"body\")[0];\n                bdoy.style.backgroundImage=val;\n                this.readerStyle.backImage=val;\n            },\n\n            changeBackImage(value){\n                if(value.backImagesrc)\n                    this.backImage=\"url('\"+this.publicPath+value.backImagesrc+\"')\";\n                else\n                    this.backImage=\"\";\n            },\n            updateStyle(){\n                this.onLightChange(this.readerStyle.light);\n                this.onBackImageChange(this.readerStyle.backImage);\n                this.onFontSizeChange(this.readerStyle.fontSize);\n            },\n            changeChapter(chapter){\n                console.log(\"changeChapter book\");\n                this.changeType=\"menu\";\n                this.showLeftDrawer=false;\n                this.chapter=chapter;\n            },\n        },\n        beforeCreate:function () {\n            document.title = \"图书阅读\";\n            var that = this;\n            var bookfile = this.$route.params.pathMatch;\n            var bookoption={\n\n            };\n\n            if(!/.epub$/.test(bookfile)&&bookfile!=undefined){\n                bookoption.openAs= 'directory';\n            }\n            book = new Epub(bookfile,bookoption);\n            console.log('ePub load = '  + bookfile);\n            console.log(book);\n            rendition = book.renderTo(\"viewer\", {\n                width: \"100%\",\n                // view:Epub.InlineView\n            });\n\n            console.log('ePub render');\n            // book.ready.then(function() {\n            //     console.log(\"book ready\");\n            // })\n\n            // Generate location and pagination\n            book.ready.then(function() {\n                \n                // const stored = localStorage.getItem(book.key() + '-locations');\n                 console.log('metadata:', book.package.metadata);\n                // if (stored) {\n                //     return book.locations.load(stored);\n                // } else {\n                    \n                    return book.locations.generate(719); // Generates CFI for every X characters (Characters per/page)\n                // }\n            }).then(function(location) { // This promise will take a little while to return (About 20 seconds or so for Moby Dick)\n                //localStorage.setItem(book.key() + '-locations', book.locations.save());\n                 console.log('locations:', book.locations);\n                that.locationLoading = false;\n               // that.pageText = (that.beginBasePage + that.currentPage) + \"/\" + book.locations.total;\n            });\n\n            var viewManager;\n\n            rendition.on(\"started\",function () {\n                viewManager = rendition.manager;\n                console.log(\"rendition started\")\n                viewManager.on(\"beforeCreateView\",function (section) {\n                    console.log(\"viewManager beforeCreateView\");\n                    that.loading = true;\n                })\n\n                viewManager.on(\"afterCreateView\",function (view) {\n                    console.log(\"viewManager afterCreateView\");\n                    view.hooks.content.register(function (iframe) {\n                        that.updateStyle();\n                        console.log(\"view updateStyle\");\n                    })\n                })\n\n            })\n\n            rendition.on(\"rendered\", function(section){\n                console.log(\"rendition rendered\" ,rendition.currentLocation());\n                // that.updateStyle();\n                that.loading = false;\n                console.log(\"chapter=\" , that.chapter );\n\n\n                that.beginBasePage = book.locations.locationFromCfi(rendition.currentLocation().start.cfi);\n\n                console.log(\"beginBasePage=\" , that.beginBasePage );\n                \n\n                let current = book.navigation && book.navigation.get(section.href);\n                that.currentChaperIdx = section.index;\n\n                if(that.chapter.href!=current.href){\n                    that.changeType=\"turnPage\";\n                    that.chapter=current;\n                }\n\n\n                var iframe = document.getElementsByTagName(\"iframe\")[0].contentWindow.document;\n                var viewport = iframe.getElementsByTagName(\"html\")[0];\n\n\n                var container = document.getElementById(\"viewer\").firstElementChild;\n                var startScrollLeft;\n                console.log(container);\n\n\n                var pageWidth = window.innerWidth; // 页面宽度\n                var maxWidth =  pageWidth/2;\n                var startX, startY;\n                var initialPos = 0;  // 手指按下的屏幕位置\n                var moveLength = 0;  // 手指当前滑动的距离\n                var direction = 'left'; // 滑动的方向\n                var isMove = false; // 是否发生左右滑动\n                var startT = 0; // 记录手指按下去的时间\n                var isTouchEnd = true; // 标记当前滑动是否结束(手指已离开屏幕)\n                var throttleTime = 0;\n                var lastScroll,totalPages;\n\n\n                that.currentPage = 1; \n                // let location = viewManager.currentLocation();\n                // that.currentPage = location[0].pages[0]; \n\n                // 手指放在屏幕上\n                viewport.addEventListener('touchstart', function (e) {\n                    startScrollLeft = container.scrollLeft;\n                    let location = viewManager.currentLocation();\n                    totalPages = location[0].totalPages;\n                    //that.currentPage = location[0].pages[0];  \n\n\n                    //touchstart与touchend的浏览器默认行为不能阻止，\n                    // 如果阻止的话则浏览器无法计算该节点内的点击等其他事件\n                    //e.preventDefault();\n                    console.log('touchstart');\n                    console.log(startScrollLeft);\n                    // 单手指触摸或者多手指同时触摸，禁止第二个手指延迟操作事件\n                    if (e.touches.length === 1 || isTouchEnd) {\n                        var touch = e.touches[0];\n                        startX = touch.pageX;\n                        startY = touch.pageY;\n                        lastScroll=0;\n                        startT = + new Date(); // 记录手指按下的开始时间\n                        isMove = false; // 是否产生滑动\n                        isTouchEnd = false; // 当前滑动开始\n\n                    }\n                }, { passive: false});\n\n                // 手指在屏幕上滑动，页面跟随手指移动\n                viewport.addEventListener('touchmove', function (e) {\n                    e.preventDefault();\n                    console.log('touchmove');\n\n                    //用于频繁滑动防抖\n                    // var now = new Date().getTime();\n                    // if(!throttleTime) throttleTime=now;\n                    // if(now-throttleTime<20) return;\n                    // throttleTime = now;\n\n                    // 如果当前滑动已结束，不管其他手指是否在屏幕上都禁止该事件\n                    if (isTouchEnd) return ;\n\n                    var touch = e.touches[0];\n                    //container scroll改变时touch.pageX也会跟着变，所以需要减掉容器滚动的距离获取真正的手指移动距离。\n                    var scrolltemp = container.scrollLeft-startScrollLeft;\n                    console.log(\"scrolltemp:\"+scrolltemp);\n                    var deltaX = touch.pageX - startX-scrolltemp;\n                    console.log(\"pageX:\"+touch.pageX ,\"deltaX:\"+deltaX,\"startX:\"+startX);\n                    direction = deltaX > 0 ? 'right' : 'left'; // 判断手指滑动的方向\n\n                    // if(that.chapter.href==that.toc[0].href&&direction=='right'&&currentPage==1) return;\n\n                    isMove = true;\n                    moveLength = deltaX;\n\n                    scrollPage.call(viewport, moveLength,e);\n\n                    //如果滑动距离超过最大距离则翻页\n                    if(Math.abs(moveLength)>=maxWidth){\n                        throttleTime = 0;\n                        turnPage.call(viewport,moveLength);\n                    }\n\n                }, { passive: false});\n\n\n\n\n                // 手指离开屏幕时，计算最终需要停留在哪一页\n                viewport.addEventListener('touchend', function (e) {\n                    console.log('touchend');\n\n                    if(!isMove){\n                        console.log(e.target);\n                        isTouchEnd=true;\n                        if(e.target.tagName==\"A\"||e.target.parentNode.tagName==\"A\") return;\n                        e.preventDefault();\n                        that.popupShow=true;\n                        return;\n                    }\n\n\n                    throttleTime = 0;\n                    var translate = 0;\n                    // 计算手指在屏幕上停留的时间\n                    var deltaT = + new Date() - startT;\n                    // 发生了滑动，并且当前滑动事件未结束\n                    if (isMove && !isTouchEnd) {\n                        isTouchEnd = true; // 标记当前完整的滑动事件已经结束\n                        // 使用动画过渡让页面滑动到最终的位置\n                        if (deltaT < 300) { // 如果停留时间小于300ms,则认为是快速滑动，无论滑动距离是多少，都停留到下一页\n\n                            turnPage.call(viewport,moveLength);\n\n                        } else {\n                            // 如果滑动距离小于屏幕的50%，则退回到上一页\n                            if (Math.abs(moveLength) < maxWidth) {\n                                // 执行滑动，让页面恢复\n                                scrollPage.call(viewport, 0);\n                                isTouchEnd = true;\n\n                            } else {\n                                // 如果滑动距离大于屏幕的50%，则翻页\n                                turnPage.call(viewport,moveLength);\n                            }\n                        }\n\n                    }\n\n                }, { passive: false });\n\n\n                function turnPage(moveLength){\n                    isTouchEnd = true;\n\n                    console.log(container.scrollLeft);\n                    this.style.webkitTransform = 'translate3d(0, 0, 0)';\n\n                    console.log(\"moveLength:\"+moveLength);\n                    if(direction===\"left\"){\n                        if (book.package.metadata.direction === \"rtl\") {\n                            rendition.prev(moveLength);\n                            that.currentPage--;\n                        }   else {\n                            rendition.next(moveLength);\n                            that.currentPage++;\n                        }\n                    }else{\n                        if (that.currentPage==1 && book.package.metadata.direction != \"rtl\" &&  that.currentChaperIdx<=2  ) return; //第一页禁止继续向前\n                        if (book.package.metadata.direction === \"rtl\" ) {\n                                rendition.next(moveLength);\n                                that.currentPage++;\n                            }    else {\n                                rendition.prev(moveLength);\n                                that.currentPage--;\n                            } \n                    }\n                }\n\n\n\n                // 页面平移\n                function scrollPage(translate,type) {\n                        console.log(\"totalPages:\"+totalPages,\"currentPage:\"+that.currentPage)\n                        if(that.currentPage==1&&direction===\"right\"||that.currentPage==totalPages&&direction===\"left\"){\n                            this.style.webkitTransform = 'translate3d(' + translate + 'px, 0, 0)';\n                            console.log(\"webkitTransform\");\n                        } else{\n                            container.scrollLeft=startScrollLeft-translate;\n                            console.log(\"scrollLeft\");\n                        }\n\n\n                }\n\n\n            });\n\n            rendition.on(\"relocated\", function(locations){\n                //console.log(\"relocated location\",locations);\n                // When navigating to the next/previous page\n                //let progress = book.locations.percentageFromCfi(locations.start.cfi);\n                // console.log('Progress:', progress); // The % of how far along in the book you are\n                // console.log('Current Page:',book.locations.locationFromCfi(locations.start.cfi));\n                // console.log('Total Pages:',book.locations.total);\n                if (that.locationLoading) {\n                    that.pageText = (that.beginBasePage + that.currentPage);\n                    that.pageProcess =  parseInt((that.beginBasePage + that.currentPage)/300) + \"%\";\n\n                    return;\n                }\n\n\n                let progress = book.locations.percentageFromCfi(locations.start.cfi);\n                that.pageProcess = progress + \"%\";\n\n                let total = book.locations.total;\n                if (total<5) total = 5; \n\n                \n\n                let showpage = that.beginBasePage + that.currentPage;\n                let calpage = book.locations.locationFromCfi(locations.start.cfi);\n\n                console.log('showpage:', showpage);  \n                console.log('calpage:', calpage); \n\n                if (calpage>total) total=calpage;\n                //有链接跳转的时候，这是currentPage是不对的\n                if ( Math.abs(calpage - showpage)>2 ){\n                    that.currentPage = calpage - showpage;\n                    showpage = calpage;\n                }\n                if (showpage>total) showpage=total;\n                //that.pageText = showpage  +  \"/\" + total;\n                that.pageText = showpage;\n\n                \n \n            });\n\n            rendition.on(\"layout\", function(layout) {\n                console.log(\"layout\",layout);\n            });\n\n\n            book.loaded.navigation.then(function(toc){\n                that.chapter = toc.toc[0];\n                that.toc=toc.toc;\n                console.log(\"navigation,loaded\")\n            });\n\n        },\n        destroyed:function () {\n            console.log(\"unloading\");\n            book.destroy();\n        }\n    }\n</script>\n\n<style>\n\n.van-stepper__input[disabled] {\n    color:black;\n}\n\n</style>"]}]}