{"remainingRequest":"C:\\Users\\conta\\Documents\\IDEAProjects\\epub-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\conta\\Documents\\IDEAProjects\\epub-vue\\src\\components\\bookmenu.vue?vue&type=style&index=0&id=5fa55bd8&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\conta\\Documents\\IDEAProjects\\epub-vue\\src\\components\\bookmenu.vue","mtime":1577182506324},{"path":"C:\\Users\\conta\\Documents\\IDEAProjects\\epub-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\conta\\Documents\\IDEAProjects\\epub-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\conta\\Documents\\IDEAProjects\\epub-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\conta\\Documents\\IDEAProjects\\epub-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\conta\\Documents\\IDEAProjects\\epub-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tZW51TGlzdHsKICAgIGZvbnQtc2l6ZTogMTRweDsKfQoubWVudUxpc3QgLm1lbnVMaXN0ewogICAgcGFkZGluZy1sZWZ0OiAyMHB4Owp9Ci5tZW51TGlzdCAuYWN0aXZlewogICAgY29sb3I6IHJlZDsKfQouYm9va21lbnUtaWNvbnsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHdpZHRoOiAxMCU7Cn0KLmJvb2ttZW51LWxhYmVsewogICAgd2lkdGg6IDkwJTsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICB0ZXh0LW92ZXJmbG93OmVsbGlwc2lzOwogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKfQo="},{"version":3,"sources":["bookmenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bookmenu.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"menuList\">\n        <van-divider/>\n        <div class=\"bookmenuItem\" v-for=\"(item,index) in menuList\" :key=\"item.name\" v-bind:itemHref=\"item.href\">\n            <span class=\"bookmenu-icon\"><van-icon v-bind:name=\"item.subitems.length?item.iconName:''\" @click=\"toggleMenu(item,index)\"/></span>\n            <span class=\"bookmenu-label\"  @click=\"changeChapter($event,item)\">\n                <span>{{item.label}}</span>\n            </span>\n            <bookmenu v-show=\"item.subitems.length&&item.isOpen\" v-bind:menuList=\"item.subitems\" @change=\"onChangeChapter\"></bookmenu>\n            <van-divider v-if=\"index!=menuListLength-1\"/>\n        </div>\n    </div>\n</template>\n\n<script>\n    import $ from \"jquery\";\n    import Vue from 'vue';\n    import { Icon,Divider  } from 'vant';\n\n    Vue.use(Icon).use(Divider);\n\n    export default {\n        name: \"bookmenu\",\n        props:{\n            menuList:Array,\n            currentMenu:Object\n        },\n        data(){\n            return{\n                menuListLength:this.menuList.length\n            }\n        },\n        beforeMount(){\n            this.parseMenuList(this.menuList);\n        },\n        watch:{\n            currentMenu:function (oldVal,newVal) {\n                console.log(\"currentMenu change\");\n                for(var idx=0;idx<this.menuList.length;idx++){\n                    var item=this.menuList[idx];\n                    if(item.href==newVal.href){\n                        console.log(\"currentMenu change\");\n                        // this.menuList.splice(idx, 1, item);\n                    }\n                }\n            }\n        },\n        methods:{\n            parseMenuList:function(menuList){\n                //最初进入嵌套组件进行数据初始化\n                if(menuList.length&&!menuList[0].parent){\n                    for(var idx=0;idx<menuList.length;idx++){\n                        var item=menuList[idx];\n                        item.iconName=\"\";\n                        item.isOpen=false;\n                        if(item.subitems&&item.subitems.length){\n                            item.iconName=\"arrow\";\n                            this.parseMenuList(item.subitems);\n                        }\n                    }\n                }\n            },\n            //点击当前层触发\n            changeChapter:function (event,item) {\n                if($(event.target).hasClass(\"active\")||$(event.target).parent().hasClass(\"active\"))\n                    return;\n\n                console.log(\"changeChapter\");\n               $(\".bookmenu-label\").removeClass(\"active\");\n\n               if($(event.target).hasClass(\"bookmenu-label\"))\n                   $(event.target).addClass(\"active\");\n               else\n                   $(event.target).parent().addClass(\"active\")\n\n                this.$emit('change',item);\n            },\n            //监听传递子层\n            onChangeChapter:function(item){\n                this.$emit('change',item);\n            },\n            toggleMenu(item,idx){\n                if(item.isOpen){\n                    item.isOpen=false;\n                    item.iconName = 'arrow'\n                } else{\n                    item.isOpen=true;\n                    item.iconName = 'arrow-down'\n                }\n                //触发数组内容变动的监听\n                this.menuList.splice(idx, 1, item);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .menuList{\n        font-size: 14px;\n    }\n    .menuList .menuList{\n        padding-left: 20px;\n    }\n    .menuList .active{\n        color: red;\n    }\n    .bookmenu-icon{\n        display: inline-block;\n        width: 10%;\n    }\n    .bookmenu-label{\n        width: 90%;\n        display: inline-block;\n        overflow: hidden;\n        text-overflow:ellipsis;\n        white-space: nowrap;\n    }\n</style>"]}]}